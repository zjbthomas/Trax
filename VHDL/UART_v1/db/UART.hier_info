|top
reset => button_debouncer:button_debouncer_inst.reset
reset => UART:UART_inst.reset
clock => pll:pll_inst.inclk0
Tx_data[0] => UART:UART_inst.Tx_data[0]
Tx_data[1] => UART:UART_inst.Tx_data[1]
Tx_data[2] => UART:UART_inst.Tx_data[2]
Tx_data[3] => UART:UART_inst.Tx_data[3]
Tx_data[4] => UART:UART_inst.Tx_data[4]
Tx_data[5] => UART:UART_inst.Tx_data[5]
Tx_data[6] => UART:UART_inst.Tx_data[6]
Tx_data[7] => UART:UART_inst.Tx_data[7]
send => button_debouncer:button_debouncer_inst.push_button
Txd << UART:UART_inst.Txd
Tx_busy << UART:UART_inst.Tx_busy
Rx_data[0] << UART:UART_inst.Rx_data[0]
Rx_data[1] << UART:UART_inst.Rx_data[1]
Rx_data[2] << UART:UART_inst.Rx_data[2]
Rx_data[3] << UART:UART_inst.Rx_data[3]
Rx_data[4] << UART:UART_inst.Rx_data[4]
Rx_data[5] << UART:UART_inst.Rx_data[5]
Rx_data[6] << UART:UART_inst.Rx_data[6]
Rx_data[7] << UART:UART_inst.Rx_data[7]
Rx_err << UART:UART_inst.Rx_err
Rxd => UART:UART_inst.Rxd
Rx_busy << UART:UART_inst.Rx_busy


|top|pll:pll_inst
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|top|pll:pll_inst|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|top|pll:pll_inst|altpll:altpll_component|pll_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|top|button_debouncer:button_debouncer_inst
reset => sampling_counter[0].ACLR
reset => sampling_counter[1].ACLR
reset => sampling_counter[2].ACLR
reset => sampling_counter[3].ACLR
reset => sampling_counter[4].ACLR
reset => sampling_counter[5].ACLR
reset => sampling_counter[6].ACLR
reset => sampling_counter[7].ACLR
reset => sampling_counter[8].ACLR
reset => sampling_counter[9].ACLR
reset => sampling_counter[10].ACLR
reset => sampling_counter[11].ACLR
reset => sampling_counter[12].ACLR
reset => sampling_counter[13].ACLR
reset => sampling_counter[14].ACLR
reset => sampling_counter[15].ACLR
reset => pulse~reg0.ACLR
reset => pulse_counter[0].ACLR
reset => pulse_counter[1].ACLR
reset => pulse_counter[2].ACLR
reset => pulse_counter[3].ACLR
clk => pulse~reg0.CLK
clk => pulse_counter[0].CLK
clk => pulse_counter[1].CLK
clk => pulse_counter[2].CLK
clk => pulse_counter[3].CLK
clk => sampling_counter[0].CLK
clk => sampling_counter[1].CLK
clk => sampling_counter[2].CLK
clk => sampling_counter[3].CLK
clk => sampling_counter[4].CLK
clk => sampling_counter[5].CLK
clk => sampling_counter[6].CLK
clk => sampling_counter[7].CLK
clk => sampling_counter[8].CLK
clk => sampling_counter[9].CLK
clk => sampling_counter[10].CLK
clk => sampling_counter[11].CLK
clk => sampling_counter[12].CLK
clk => sampling_counter[13].CLK
clk => sampling_counter[14].CLK
clk => sampling_counter[15].CLK
clk => push_button_sync[0].CLK
clk => push_button_sync[1].CLK
push_button => push_button_sync[0].DATAIN
pulse <= pulse~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|UART:UART_inst
reset => TX:uut0.reset
reset => RX:uut1.reset
clk => TX:uut0.clk
clk => RX:uut1.clk
Tx_data[0] => TX:uut0.Tx_data[0]
Tx_data[1] => TX:uut0.Tx_data[1]
Tx_data[2] => TX:uut0.Tx_data[2]
Tx_data[3] => TX:uut0.Tx_data[3]
Tx_data[4] => TX:uut0.Tx_data[4]
Tx_data[5] => TX:uut0.Tx_data[5]
Tx_data[6] => TX:uut0.Tx_data[6]
Tx_data[7] => TX:uut0.Tx_data[7]
Tx_en => TX:uut0.Tx_en
Txd <= TX:uut0.Txd
Tx_busy <= TX:uut0.Tx_busy
Rx_data[0] <= RX:uut1.Rx_data[0]
Rx_data[1] <= RX:uut1.Rx_data[1]
Rx_data[2] <= RX:uut1.Rx_data[2]
Rx_data[3] <= RX:uut1.Rx_data[3]
Rx_data[4] <= RX:uut1.Rx_data[4]
Rx_data[5] <= RX:uut1.Rx_data[5]
Rx_data[6] <= RX:uut1.Rx_data[6]
Rx_data[7] <= RX:uut1.Rx_data[7]
Rx_err <= RX:uut1.Rx_err
Rxd => RX:uut1.Rxd
Rx_busy <= RX:uut1.Rx_busy


|top|UART:UART_inst|TX:uut0
reset => reg[0].ACLR
reset => reg[1].ACLR
reset => reg[2].ACLR
reset => reg[3].ACLR
reset => reg[4].ACLR
reset => reg[5].ACLR
reset => reg[6].ACLR
reset => reg[7].ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => Txd~reg0.PRESET
reset => state~3.DATAIN
clk => reg[0].CLK
clk => reg[1].CLK
clk => reg[2].CLK
clk => reg[3].CLK
clk => reg[4].CLK
clk => reg[5].CLK
clk => reg[6].CLK
clk => reg[7].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => Txd~reg0.CLK
clk => state~1.DATAIN
Tx_data[0] => reg[0].DATAIN
Tx_data[1] => reg[1].DATAIN
Tx_data[2] => reg[2].DATAIN
Tx_data[3] => reg[3].DATAIN
Tx_data[4] => reg[4].DATAIN
Tx_data[5] => reg[5].DATAIN
Tx_data[6] => reg[6].DATAIN
Tx_data[7] => reg[7].DATAIN
Tx_en => process_0.IN0
Txd <= Txd~reg0.DB_MAX_OUTPUT_PORT_TYPE
Tx_busy <= Tx_busy.DB_MAX_OUTPUT_PORT_TYPE


|top|UART:UART_inst|RX:uut1
reset => reg[0].ACLR
reset => reg[1].ACLR
reset => reg[2].ACLR
reset => reg[3].ACLR
reset => reg[4].ACLR
reset => reg[5].ACLR
reset => reg[6].ACLR
reset => reg[7].ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => Rx_err~reg0.ACLR
reset => Rx_data[0]~reg0.ACLR
reset => Rx_data[1]~reg0.ACLR
reset => Rx_data[2]~reg0.ACLR
reset => Rx_data[3]~reg0.ACLR
reset => Rx_data[4]~reg0.ACLR
reset => Rx_data[5]~reg0.ACLR
reset => Rx_data[6]~reg0.ACLR
reset => Rx_data[7]~reg0.ACLR
reset => state~4.DATAIN
clk => reg[0].CLK
clk => reg[1].CLK
clk => reg[2].CLK
clk => reg[3].CLK
clk => reg[4].CLK
clk => reg[5].CLK
clk => reg[6].CLK
clk => reg[7].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => Rx_err~reg0.CLK
clk => Rx_data[0]~reg0.CLK
clk => Rx_data[1]~reg0.CLK
clk => Rx_data[2]~reg0.CLK
clk => Rx_data[3]~reg0.CLK
clk => Rx_data[4]~reg0.CLK
clk => Rx_data[5]~reg0.CLK
clk => Rx_data[6]~reg0.CLK
clk => Rx_data[7]~reg0.CLK
clk => state~2.DATAIN
Rx_data[0] <= Rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx_data[1] <= Rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx_data[2] <= Rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx_data[3] <= Rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx_data[4] <= Rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx_data[5] <= Rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx_data[6] <= Rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx_data[7] <= Rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx_err <= Rx_err~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rxd => reg.DATAB
Rxd => reg.DATAB
Rxd => reg.DATAB
Rxd => reg.DATAB
Rxd => reg.DATAB
Rxd => reg.DATAB
Rxd => reg.DATAB
Rxd => reg.DATAB
Rxd => Rx_err.OUTPUTSELECT
Rxd => process_0.IN0
Rx_busy <= Rx_busy.DB_MAX_OUTPUT_PORT_TYPE


